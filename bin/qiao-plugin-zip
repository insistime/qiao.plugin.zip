var qiaoPluginZip = require('../lib/qiao.plugin.zip');

// args
var args = process.argv.slice(2);

// check args
if(!args || args.length != 3){
	console.log('unzip file:');
	console.log('	qiao-plugin-zip unzip zipFile destFolder');
	console.log('zip file');
	console.log('	qiao-plugin-zip zipfile sourceFile destZip');
	console.log('zip folder');
	console.log('	qiao-plugin-zip zipfolder sourceFolder destZip');
	
	return;
}

// check cmd
var cmd = args[0];
if(cmd != 'unzip' && cmd != 'zipfile' && cmd != 'zipfolder'){
	console.log('only support unzip, zipfile, zipfolder cmd');
	
	return;
}

// unzip
var unzip = function(path1, path2){
	try{
		qiaoPluginZip.unzip(path1, path2);
		
		console.log('unzip success!');
	}catch(e){
		console.log(e);
	}
};

// zip file
var zipFile = async function(path1, path2){
	try{
		var msg = await qiaoPluginZip.zipFileSync(path1, path2);
	
		console.log(msg);
	}catch(e){
		console.log(e);
	}
	
	return;
};

// zip folder
var zipFolder = async function(path1, path2){
	try{
		var msg = await qiaoPluginZip.zipFolderSync(path1, path2);
		
		console.log(msg);
	}catch(e){
		console.log(e);
	}
};

// paths
var path1 = args[1];
var path2 = args[2];

// unzip
if(cmd == 'unzip'){
	unzip(path1, path2);
	
	return;
}

// zip file
if(cmd == 'zipfile'){
	zipFile(path1, path2);

	return;
}

// zip folder
if(cmd == 'zipfolder'){
	zipFolder(path1, path2);

	return;
}